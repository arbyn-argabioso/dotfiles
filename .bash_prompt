# This prompt inspired by gf3, sindresorhus, alrra, and mathiasbynens.
# but customized to me. <3

default_username="$(whoami)"

# ------------------------------------------------------------------
# | Brash Prompt function                                          |
# ------------------------------------------------------------------

function set_prompt() {
    local dateCmd=""

    local bold=""
    local white="\e[0m\e[0;37m"

    local black="\e[0;30m"
    local blue="\e[0;34m"
    local cyan="\e[0;36m"
    local green="\e[0;32m"
    local orange="\e[0;33m"
    local purple="\e[0;35m"
    local red="\e[0;31m"
    local magenta="\e[0;31m"
    local violet="\e[0;35m"
    local reset="\e[0m"
    local yellow="\e[0;33m"

    # Only show username/host if not default
    function usernamehost() {
        # Highlight the user name when logged in as root.
        userhost=""
        userhost+="\[$red\]$default_username "
        userhost+="\[$white\]at "
        userhost+="\[$blue\]$HOSTNAME "
        userhost+="\[$white\]in "

        echo $userhost
    }

    # Custom Bash Prompt that supports Git branch and status
    # This is >5x faster than mathias's.
    function prompt_git() {
        # Check if we're in a git repo. (fast)
        git rev-parse --is-inside-work-tree &>/dev/null || return

        # Check for what branch we're on. (fast)
        # if… HEAD isn’t a symbolic ref (typical branch),
        # then… get a tracking remote branch or tag
        # otherwise… get the short SHA for the latest commit
        # lastly just give up.
        branchName="$(git symbolic-ref --quiet --short HEAD 2> /dev/null || git describe --all --exact-match HEAD 2> /dev/null || git rev-parse --short HEAD 2> /dev/null || echo '(unknown)')";

        # Early exit for Chromium & Blink repo, as the dirty check takes ~5s
        # See other Chromium repo hacking optimizations:
        # https://github.com/paulirish/dotfiles/blob/master/setup-a-new-machine.sh#L214
        repoUrl=$(git config --get remote.origin.url)
        if grep -q chromium.googlesource.com <<<$repoUrl; then
            dirty=" ⁂"
        else
            # Check if it's dirty (slow)
            # Technique via github.com/git/git/blob/355d4e173/contrib/completion/git-prompt.sh#L472-L475
            dirty=$(git diff --no-ext-diff --quiet --ignore-submodules --exit-code || echo -e "*")
        fi

        [ -n "${s}" ] && s=" [${s}]";
        echo "${cyan}${branchName} $dirty${reset}";
    }

    # Helper function that returns virtual env information to be set in prompt
    # Honors virtualenvs own setting VIRTUAL_ENV_DISABLE_PROMPT
    function get_virtualenv_name {
      local ACCUMULATED_VENV_PROMPT=""
      local VENV=""
      if [[ -n "${VIRTUAL_ENV}" && "${VIRTUAL_ENV_DISABLE_PROMPT}" == "1" ]]; then
        echo " ($(basename ${VIRTUAL_ENV}))"
      fi
      if [[ -n "${NODE_VIRTUAL_ENV}" && "${NODE_VIRTUAL_ENV_DISABLE_PROMPT}" == "1" ]]; then
        echo " ($(basename ${NODE_VIRTUAL_ENV}))"
      fi
      if [[ -n "${CONDA_DEFAULT_ENV}" ]]; then
        echo " ($(basename ${CONDA_DEFAULT_ENV}))"
      fi
    }

    # Custom Bash Prompt that supports Git branch and status
    # This is >5x faster than mathias's.
    function prompt_git_prefix() {
        if [ -z "$(prompt_git)" ]; then
            echo "";
        else
            echo " on ";
        fi
    }

    # ------------------------------------------------------------------
    # | Prompt string                                                  |
    # ------------------------------------------------------------------

    # Disable the default virtualenv prompt change
    export VIRTUAL_ENV_DISABLE_PROMPT=1

    NEW_PROMPT="\n$(usernamehost) \[$green\]\[\w\]\[\$(get_virtualenv_name)\]\[$white\]\[\$(prompt_git_prefix)\]\[$cyan\]\[\$(prompt_git)\]\012\[$reset$yellow\]⚡ \[$reset\]"
    PS1="${NEW_PROMPT}"
}

set_prompt
